package factory

import (
    "fmt"
    "github.com/go-resty/resty/v2"
)

const (
	AesKeyPool = []byte{
		0x7B, 0x56, 0xB0, 0xF7, 0xDA, 0x0E, 0x68, 0x52, 0xC8, 0x19,
		0xF3, 0x2B, 0x84, 0x90, 0x79, 0xE5, 0x62, 0xF8, 0xEA, 0xD2,
		0x64, 0x93, 0x87, 0xDF, 0x73, 0xD7, 0xFB, 0xCC, 0xAA, 0xFE,
		0x75, 0x43, 0x1C, 0x29, 0xDF, 0x4C, 0x52, 0x2C, 0x6E, 0x7B,
		0x45, 0x3D, 0x1F, 0xF1, 0xDE, 0xBC, 0x27, 0x85, 0x8A, 0x45,
		0x91, 0xBE, 0x38, 0x13, 0xDE, 0x67, 0x32, 0x08, 0x54, 0x11,
		0x75, 0xF4, 0xD3, 0xB4, 0xA4, 0xB3, 0x12, 0x86, 0x67, 0x23,
		0x99, 0x4C, 0x61, 0x7F, 0xB1, 0xD2, 0x30, 0xDF, 0x47, 0xF1,
		0x76, 0x93, 0xA3, 0x8C, 0x95, 0xD3, 0x59, 0xBF, 0x87, 0x8E,
		0xF3, 0xB3, 0xE4, 0x76, 0x49, 0x88,
	}

	AesKeyPoolNew = []byte{
		0x8C, 0x23, 0x65, 0xD1, 0xFC, 0x32, 0x45, 0x37, 0x11, 0x28,
		0x71, 0x63, 0x07, 0x20, 0x69, 0x14, 0x73, 0xE7, 0xD4, 0x53,
		0x13, 0x24, 0x36, 0xC2, 0xB5, 0xE1, 0xFC, 0xCF, 0x8A, 0x9A,
		0x41, 0x89, 0x3C, 0x49, 0xCF, 0x5C, 0x72, 0x8C, 0x9E, 0xEB,
		0x75, 0x0D, 0x3F, 0xD1, 0xFE, 0xCC, 0x57, 0x65, 0x7A, 0x35,
		0x21, 0x3E, 0x68, 0x53, 0x7E, 0x97, 0x02, 0x48, 0x74, 0x71,
		0x95, 0x34, 0x53, 0x84, 0xB4, 0xC3, 0xE2, 0xD6, 0x27, 0x3D,
		0xE6, 0x5D, 0x72, 0x9C, 0xBC, 0x3D, 0x03, 0xFD, 0x76, 0xC1,
		0x9C, 0x25, 0xA8, 0x92, 0x47, 0xE4, 0x18, 0x0F, 0x24, 0x3F,
		0x4F, 0x67, 0xEC, 0x97, 0xF4, 0x99,
	}
)

type Factory struct {
    user   string
    passwd string
    ip     string
    port   int
    cli    *resty.Client
    Key    []byte
}

func NewFactory(user, passwd, ip string, port int, key []byte) (*Factory, error) {
    if len(key) != 128 {
        return nil, fmt.Errorf("invalid key length: %d", len(key))
    }
    return &Factory{
        user:   user,
        passwd: passwd,
        ip:     ip,
        port:   port,
        cli:    resty.New(),
        Key:    key,
    }, nil
}

func (f *Factory) User() string {
    return f.user
}

func (f *Factory) SetUser(user string) {
    f.user = user
}

func (f *Factory) Passwd() string {
    return f.passwd
}

func (f *Factory) SetPasswd(passwd string) {
    f.passwd = passwd
}

func (f *Factory) IP() string {
    return f.ip
}

func (f *Factory) SetIP(ip string) {
    f.ip = ip
}

func (f *Factory) Port() int {
    return f.port
}

func (f *Factory) SetPort(port int) {
    f.port = port
}

func (f *Factory) Client() *resty.Client {
    return f.cli
}

func (f *Factory) SetClient(cli *resty.Client) {
    f.cli = cli
}

func (f *Factory) Key() []byte {
    return f.Key
}

func (f *Factory) SetKey(key []byte) error {
    if len(key) != 128 {
        return fmt.Errorf("invalid key length: %d", len(key))
    }
    f.Key = key
    return nil
}